// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System.Linq;

    public partial class MailingHistory
    {
        /// <summary>
        /// Initializes a new instance of the MailingHistory class.
        /// </summary>
        public MailingHistory() { }

        /// <summary>
        /// Initializes a new instance of the MailingHistory class.
        /// </summary>
        /// <param name="sentDate">Date & time the mailing was sent</param>
        /// <param name="bounce">Possible values include: 'HARDBOUNCE',
        /// 'SOFTBOUNCE'</param>
        public MailingHistory(bool clicked, Mailing mailing, bool opened, System.DateTime sentDate, string bounce = default(string))
        {
            Bounce = bounce;
            Clicked = clicked;
            Mailing = mailing;
            Opened = opened;
            SentDate = sentDate;
        }

        /// <summary>
        /// Gets or sets possible values include: 'HARDBOUNCE', 'SOFTBOUNCE'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "bounce")]
        public string Bounce { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "clicked")]
        public bool Clicked { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "mailing")]
        public Mailing Mailing { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "opened")]
        public bool Opened { get; set; }

        /// <summary>
        /// Gets or sets date &amp; time the mailing was sent
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sentDate")]
        public System.DateTime SentDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Mailing == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Mailing");
            }
            if (this.Mailing != null)
            {
                this.Mailing.Validate();
            }
        }
    }
}
