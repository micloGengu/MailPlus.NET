// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System.Linq;

    public partial class Contact
    {
        /// <summary>
        /// Initializes a new instance of the Contact class.
        /// </summary>
        public Contact() { }

        /// <summary>
        /// Initializes a new instance of the Contact class.
        /// </summary>
        /// <param name="externalId">Specified contact reference by external
        /// system</param>
        /// <param name="channels">All available channels for this contact -
        /// Cannot be modified</param>
        /// <param name="created">Date & time the contact was created - Cannot
        /// be modified</param>
        /// <param name="encryptedId">Contact reference generated by MailPlus
        /// - Cannot be modified</param>
        /// <param name="lastChanged">Date & time the contact has been changed
        /// - Cannot be modified</param>
        /// <param name="properties">Available properties can be retrieved by
        /// /contact/properties/list</param>
        /// <param name="temporary">Indication whether the contact is
        /// temporary - Cannot be modified</param>
        /// <param name="testGroup">Defines whether the contact is added to
        /// the test group</param>
        public Contact(string externalId, System.Collections.Generic.IList<Channel> channels = default(System.Collections.Generic.IList<Channel>), long? created = default(long?), string encryptedId = default(string), long? lastChanged = default(long?), System.Collections.Generic.IDictionary<string, object> properties = default(System.Collections.Generic.IDictionary<string, object>), bool? temporary = default(bool?), bool? testGroup = default(bool?))
        {
            Channels = channels;
            Created = created;
            EncryptedId = encryptedId;
            ExternalId = externalId;
            LastChanged = lastChanged;
            Properties = properties;
            Temporary = temporary;
            TestGroup = testGroup;
        }

        /// <summary>
        /// Gets or sets all available channels for this contact - Cannot be
        /// modified
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "channels")]
        public System.Collections.Generic.IList<Channel> Channels { get; set; }

        /// <summary>
        /// Gets or sets date &amp; time the contact was created - Cannot be
        /// modified
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "created")]
        public long? Created { get; set; }

        /// <summary>
        /// Gets or sets contact reference generated by MailPlus - Cannot be
        /// modified
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptedId")]
        public string EncryptedId { get; set; }

        /// <summary>
        /// Gets or sets specified contact reference by external system
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "externalId")]
        public string ExternalId { get; set; }

        /// <summary>
        /// Gets or sets date &amp; time the contact has been changed - Cannot
        /// be modified
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastChanged")]
        public long? LastChanged { get; set; }

        /// <summary>
        /// Gets or sets available properties can be retrieved by
        /// /contact/properties/list
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties")]
        public System.Collections.Generic.IDictionary<string, object> Properties { get; set; }

        /// <summary>
        /// Gets or sets indication whether the contact is temporary - Cannot
        /// be modified
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "temporary")]
        public bool? Temporary { get; set; }

        /// <summary>
        /// Gets or sets defines whether the contact is added to the test group
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "testGroup")]
        public bool? TestGroup { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ExternalId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ExternalId");
            }
            if (this.Channels != null)
            {
                foreach (var element in this.Channels)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
