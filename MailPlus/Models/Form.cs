// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System.Linq;

    public partial class Form
    {
        /// <summary>
        /// Initializes a new instance of the Form class.
        /// </summary>
        public Form() { }

        /// <summary>
        /// Initializes a new instance of the Form class.
        /// </summary>
        /// <param name="formState">Possible values include: 'draft', 'proof',
        /// 'final'</param>
        /// <param name="formSubType">Possible values include: 'normal',
        /// 'subscribe', 'unSubscribe', 'editProfile'</param>
        /// <param name="id">formId (Use '/form/*' to request additional
        /// data)</param>
        /// <param name="name">Form name</param>
        public Form(string formState, string formSubType, int id, string name)
        {
            FormState = formState;
            FormSubType = formSubType;
            Id = id;
            Name = name;
        }

        /// <summary>
        /// Gets or sets possible values include: 'draft', 'proof', 'final'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "formState")]
        public string FormState { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'normal', 'subscribe',
        /// 'unSubscribe', 'editProfile'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "formSubType")]
        public string FormSubType { get; set; }

        /// <summary>
        /// Gets or sets formId (Use '/form/*' to request additional data)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets form name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FormState == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "FormState");
            }
            if (FormSubType == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "FormSubType");
            }
            if (Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
