// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Form
    {
        /// <summary>
        /// Initializes a new instance of the Form class.
        /// </summary>
        public Form() { }

        /// <summary>
        /// Initializes a new instance of the Form class.
        /// </summary>
        public Form(string formState, string formSubType, int id, string name)
        {
            FormState = formState;
            FormSubType = formSubType;
            Id = id;
            Name = name;
        }

        /// <summary>
        /// Possible values include: 'draft', 'proof', 'final'
        /// </summary>
        [JsonProperty(PropertyName = "formState")]
        public string FormState { get; set; }

        /// <summary>
        /// Possible values include: 'normal', 'subscribe', 'unSubscribe',
        /// 'editProfile'
        /// </summary>
        [JsonProperty(PropertyName = "formSubType")]
        public string FormSubType { get; set; }

        /// <summary>
        /// formId (Use '/form/*' to request additional data)
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// Form name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (FormState == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FormState");
            }
            if (FormSubType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FormSubType");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
