// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Mailing
    {
        /// <summary>
        /// Initializes a new instance of the Mailing class.
        /// </summary>
        public Mailing() { }

        /// <summary>
        /// Initializes a new instance of the Mailing class.
        /// </summary>
        public Mailing(string encryptedId, string name, DateTime scheduledStartDate, int sentCount, string type, string archiveLink = default(string))
        {
            ArchiveLink = archiveLink;
            EncryptedId = encryptedId;
            Name = name;
            ScheduledStartDate = scheduledStartDate;
            SentCount = sentCount;
            Type = type;
        }

        /// <summary>
        /// Link to an online version of the mailing
        /// </summary>
        [JsonProperty(PropertyName = "archiveLink")]
        public string ArchiveLink { get; set; }

        /// <summary>
        /// encryptedMailingId (Use '/mailing/*' to request additional data)
        /// </summary>
        [JsonProperty(PropertyName = "encryptedId")]
        public string EncryptedId { get; set; }

        /// <summary>
        /// Mailing name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Date &amp; time the mailing was scheduled to send
        /// </summary>
        [JsonProperty(PropertyName = "scheduledStartDate")]
        public DateTime ScheduledStartDate { get; set; }

        /// <summary>
        /// Number of mailings sent
        /// </summary>
        [JsonProperty(PropertyName = "sentCount")]
        public int SentCount { get; set; }

        /// <summary>
        /// Possible values include: 'EMAIL', 'SMS', 'DM'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (EncryptedId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EncryptedId");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
