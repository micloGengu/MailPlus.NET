// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System.Linq;

    public partial class MailingLink
    {
        /// <summary>
        /// Initializes a new instance of the MailingLink class.
        /// </summary>
        public MailingLink() { }

        /// <summary>
        /// Initializes a new instance of the MailingLink class.
        /// </summary>
        /// <param name="id">linkId</param>
        /// <param name="name">Specified link name in MailPlus</param>
        /// <param name="url">Link URL</param>
        /// <param name="code">Specified link code in MailPlus</param>
        /// <param name="type">Possible values include: 'twitter', 'facebook',
        /// 'hyves', 'linkedin', 'googleplus', 'googleone', 'openhtml',
        /// 'opentext', 'openpdf', 'openpdftext', 'unsubscribe',
        /// 'editprofile', 'webshop', 'conversion'</param>
        public MailingLink(int id, string name, string url, string code = default(string), string type = default(string))
        {
            Code = code;
            Id = id;
            Name = name;
            Type = type;
            Url = url;
        }

        /// <summary>
        /// Gets or sets specified link code in MailPlus
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "code")]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets linkId
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets specified link name in MailPlus
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'twitter', 'facebook',
        /// 'hyves', 'linkedin', 'googleplus', 'googleone', 'openhtml',
        /// 'opentext', 'openpdf', 'openpdftext', 'unsubscribe',
        /// 'editprofile', 'webshop', 'conversion'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets link URL
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
            if (Url == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Url");
            }
        }
    }
}
