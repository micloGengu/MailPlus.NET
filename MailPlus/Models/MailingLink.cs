// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class MailingLink
    {
        /// <summary>
        /// Initializes a new instance of the MailingLink class.
        /// </summary>
        public MailingLink() { }

        /// <summary>
        /// Initializes a new instance of the MailingLink class.
        /// </summary>
        public MailingLink(int id, string name, string url, string code = default(string), string type = default(string))
        {
            Code = code;
            Id = id;
            Name = name;
            Type = type;
            Url = url;
        }

        /// <summary>
        /// Specified link code in MailPlus
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; set; }

        /// <summary>
        /// linkId
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// Specified link name in MailPlus
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Possible values include: 'twitter', 'facebook', 'hyves',
        /// 'linkedin', 'googleplus', 'googleone', 'openhtml', 'opentext',
        /// 'openpdf', 'openpdftext', 'unsubscribe', 'editprofile',
        /// 'webshop', 'conversion'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Link URL
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Url == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Url");
            }
        }
    }
}
