// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System.Linq;

    public partial class CampaignTriggerRequest
    {
        /// <summary>
        /// Initializes a new instance of the CampaignTriggerRequest class.
        /// </summary>
        public CampaignTriggerRequest() { }

        /// <summary>
        /// Initializes a new instance of the CampaignTriggerRequest class.
        /// </summary>
        /// <param name="externalContactId">Specified contact reference by
        /// external system</param>
        public CampaignTriggerRequest(string externalContactId, System.Collections.Generic.IList<CampaignField> campaignFields = default(System.Collections.Generic.IList<CampaignField>))
        {
            CampaignFields = campaignFields;
            ExternalContactId = externalContactId;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "campaignFields")]
        public System.Collections.Generic.IList<CampaignField> CampaignFields { get; set; }

        /// <summary>
        /// Gets or sets specified contact reference by external system
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "externalContactId")]
        public string ExternalContactId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ExternalContactId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ExternalContactId");
            }
            if (this.CampaignFields != null)
            {
                foreach (var element in this.CampaignFields)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
