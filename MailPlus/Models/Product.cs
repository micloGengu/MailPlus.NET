// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Product
    {
        /// <summary>
        /// Initializes a new instance of the Product class.
        /// </summary>
        public Product() { }

        /// <summary>
        /// Initializes a new instance of the Product class.
        /// </summary>
        public Product(string externalId, string imageUrl, string link, string name, string price, string addToCartLink = default(string), string brand = default(string), string category = default(string), DateTime? changeDate = default(DateTime?), DateTime? creationDate = default(DateTime?), bool? deleted = default(bool?), string description = default(string), string gtin = default(string), string imageLargeUrl = default(string), string language = default(string), string oldPrice = default(string), string ratingImageUrl = default(string), string ratingValue = default(string), string reviewLink = default(string), string sku = default(string), IList<ProductSpecification> specifications = default(IList<ProductSpecification>), string stock = default(string), bool? visible = default(bool?))
        {
            AddToCartLink = addToCartLink;
            Brand = brand;
            Category = category;
            ChangeDate = changeDate;
            CreationDate = creationDate;
            Deleted = deleted;
            Description = description;
            ExternalId = externalId;
            Gtin = gtin;
            ImageLargeUrl = imageLargeUrl;
            ImageUrl = imageUrl;
            Language = language;
            Link = link;
            Name = name;
            OldPrice = oldPrice;
            Price = price;
            RatingImageUrl = ratingImageUrl;
            RatingValue = ratingValue;
            ReviewLink = reviewLink;
            Sku = sku;
            Specifications = specifications;
            Stock = stock;
            Visible = visible;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "addToCartLink")]
        public string AddToCartLink { get; set; }

        /// <summary>
        /// Product brand
        /// </summary>
        [JsonProperty(PropertyName = "brand")]
        public string Brand { get; set; }

        /// <summary>
        /// Product category
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Date &amp; time the product has been changed - Cannot be modified
        /// </summary>
        [JsonProperty(PropertyName = "changeDate")]
        public DateTime? ChangeDate { get; set; }

        /// <summary>
        /// Date &amp; time the product was created  - Cannot be modified
        /// </summary>
        [JsonProperty(PropertyName = "creationDate")]
        public DateTime? CreationDate { get; set; }

        /// <summary>
        /// Indicates whether a product is deleted - Default value: false
        /// </summary>
        [JsonProperty(PropertyName = "deleted")]
        public bool? Deleted { get; set; }

        /// <summary>
        /// Product description
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// externalProductId - Specified product reference by external system
        /// </summary>
        [JsonProperty(PropertyName = "externalId")]
        public string ExternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gtin")]
        public string Gtin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "imageLargeUrl")]
        public string ImageLargeUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "imageUrl")]
        public string ImageUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "language")]
        public string Language { get; set; }

        /// <summary>
        /// Link to the product page
        /// </summary>
        [JsonProperty(PropertyName = "link")]
        public string Link { get; set; }

        /// <summary>
        /// Product name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Only used for discounted products
        /// </summary>
        [JsonProperty(PropertyName = "oldPrice")]
        public string OldPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "price")]
        public string Price { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ratingImageUrl")]
        public string RatingImageUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ratingValue")]
        public string RatingValue { get; set; }

        /// <summary>
        /// Link to the review page
        /// </summary>
        [JsonProperty(PropertyName = "reviewLink")]
        public string ReviewLink { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public string Sku { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "specifications")]
        public IList<ProductSpecification> Specifications { get; set; }

        /// <summary>
        /// Default value: UNKNOWN. Possible values include: 'LIMITED',
        /// 'GOOD', 'UNKNOWN'
        /// </summary>
        [JsonProperty(PropertyName = "stock")]
        public string Stock { get; set; }

        /// <summary>
        /// Defines whether the product is visible in MailPlus - Default
        /// value: true
        /// </summary>
        [JsonProperty(PropertyName = "visible")]
        public bool? Visible { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (ExternalId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ExternalId");
            }
            if (ImageUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ImageUrl");
            }
            if (Link == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Link");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Price == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Price");
            }
            if (this.Specifications != null)
            {
                foreach (var element in this.Specifications)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
