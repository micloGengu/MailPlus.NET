// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class ErrorResponse
    {
        /// <summary>
        /// Initializes a new instance of the ErrorResponse class.
        /// </summary>
        public ErrorResponse() { }

        /// <summary>
        /// Initializes a new instance of the ErrorResponse class.
        /// </summary>
        public ErrorResponse(string errorType, string message)
        {
            ErrorType = errorType;
            Message = message;
        }

        /// <summary>
        /// Possible values include: 'INVALID_PARAMS', 'INVALID_STATE',
        /// 'NAME_ALREADY_IN_USE', 'ID_NOTUNIQUE', 'PRODUCT_NOTFOUND',
        /// 'AUTH_NOT_FOUND', 'NOT_AUTHORIZED', 'FORM_NOT_FOUND',
        /// 'CONTACT_NOT_FOUND', 'CONTACT_OPTOUT', 'CONTACT_ALREADY_EXISTS',
        /// 'INVALID_PROPERTY', 'BACKEND_EXCEPTION', 'RESOURCE_NOT_FOUND',
        /// 'TRIGGER_NOTFOUND', 'CAMPAIGN_NOTFOUND', 'ORDER_NOTFOUND',
        /// 'MAILING_NOTFOUND', 'INVALID_MAILING', 'FORMRESULT_NOT_FOUND'
        /// </summary>
        [JsonProperty(PropertyName = "errorType")]
        public string ErrorType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (ErrorType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ErrorType");
            }
            if (Message == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Message");
            }
        }
    }
}
