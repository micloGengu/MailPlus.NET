// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Message
    {
        /// <summary>
        /// Initializes a new instance of the Message class.
        /// </summary>
        public Message() { }

        /// <summary>
        /// Initializes a new instance of the Message class.
        /// </summary>
        public Message(string author, string fromName, string name, string fromEmail = default(string), string subject = default(string))
        {
            Author = author;
            FromEmail = fromEmail;
            FromName = fromName;
            Name = name;
            Subject = subject;
        }

        /// <summary>
        /// Message author
        /// </summary>
        [JsonProperty(PropertyName = "author")]
        public string Author { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromEmail")]
        public string FromEmail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromName")]
        public string FromName { get; set; }

        /// <summary>
        /// Message name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subject")]
        public string Subject { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Author == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Author");
            }
            if (FromName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FromName");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
