// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class ParamsModel
    {
        /// <summary>
        /// Initializes a new instance of the ParamsModel class.
        /// </summary>
        public ParamsModel() { }

        /// <summary>
        /// Initializes a new instance of the ParamsModel class.
        /// </summary>
        public ParamsModel(IDictionary<string, IList<string>> formParams, string postUrl, string outputFormat = default(string), string outputMode = default(string))
        {
            FormParams = formParams;
            OutputFormat = outputFormat;
            OutputMode = outputMode;
            PostUrl = postUrl;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "formParams")]
        public IDictionary<string, IList<string>> FormParams { get; set; }

        /// <summary>
        /// default: HTML4STRICT. Possible values include: 'HTML4STRICT',
        /// 'XHTML1STRICT'
        /// </summary>
        [JsonProperty(PropertyName = "outputFormat")]
        public string OutputFormat { get; set; }

        /// <summary>
        /// default: TABLES. Possible values include: 'TABLES', 'DIV'
        /// </summary>
        [JsonProperty(PropertyName = "outputMode")]
        public string OutputMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postUrl")]
        public string PostUrl { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (FormParams == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FormParams");
            }
            if (PostUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PostUrl");
            }
        }
    }
}
