// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MailPlus.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Order
    {
        /// <summary>
        /// Initializes a new instance of the Order class.
        /// </summary>
        public Order() { }

        /// <summary>
        /// Initializes a new instance of the Order class.
        /// </summary>
        public Order(string date, string externalContactId, string externalId, IList<string> externalProductIds, string value)
        {
            Date = date;
            ExternalContactId = externalContactId;
            ExternalId = externalId;
            ExternalProductIds = externalProductIds;
            Value = value;
        }

        /// <summary>
        /// Date &amp; time the order was placed
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public string Date { get; set; }

        /// <summary>
        /// Specified contact reference by external system
        /// </summary>
        [JsonProperty(PropertyName = "externalContactId")]
        public string ExternalContactId { get; set; }

        /// <summary>
        /// Specified order reference by external system
        /// </summary>
        [JsonProperty(PropertyName = "externalId")]
        public string ExternalId { get; set; }

        /// <summary>
        /// Products part of the order (Use '/product/*' to request or post
        /// additional data)
        /// </summary>
        [JsonProperty(PropertyName = "externalProductIds")]
        public IList<string> ExternalProductIds { get; set; }

        /// <summary>
        /// Total order value in cents
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Date == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Date");
            }
            if (ExternalContactId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ExternalContactId");
            }
            if (ExternalId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ExternalId");
            }
            if (ExternalProductIds == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ExternalProductIds");
            }
            if (Value == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Value");
            }
        }
    }
}
